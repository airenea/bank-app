{"version":3,"sources":["logos/bankapp-logo.png","components/popups/PopUpNewUser.js","components/UserDirectory.js","components/popups/NewUserForm.js","components/Navbar.js","components/UserList.js","components/UnderNav.js","components/HelloUser.js","components/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["PopUpNewUser","props","className","onClick","handleClose","content","UserDirectory","id","surname","firstname","account","balance","email","password","creationyear","creationmonth","creationday","NewUserForm","mySubmitHandler","event","preventDefault","push","state","console","log","alert","surnameFunction","setState","target","value","accountNumber","Math","floor","random","today","Date","JSON","stringify","getFullYear","getMonth","slice","getDate","length","firstnameFunction","emailFunction","passwordFunction","balanceFunction","onSubmit","this","type","onChange","React","Component","Navbar","useState","isOpenUser","setIsOpenUser","isOpenAdjust","setIsOpenAdjust","togglePopUpUser","togglePopUpAdjust","alt","src","bankapplogo","UserListTable","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","requestSortDate","day","month","year","useSortableData","users","getClassNamesFor","name","undefined","map","item","width","UserList","UnderNav","style","height","HelloUser","TransactionHistory","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de16f8c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bankapp-logo.317a4d1c.png\";","import React from 'react';\nconst PopUpNewUser = props => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n        {props.content}\n      </div>\n    </div>\n  );\n};\n \nexport default PopUpNewUser;","let UserDirectory = [\n    { id: 1, \n      surname: 'Pilgrim',\n      firstname: 'Scott', \n      account: 56021029007678, \n      balance: 37321.38, \n      email: 'scottpilgrim@gmail.com', \n      password: 'password01', \n      creationyear: 2017, \n      creationmonth: '06', \n      creationday: '08' \n    },\n    { id: 2, \n      surname: 'Flowers', \n      firstname: 'Ramona', \n      account: 92963683436413, \n      balance: 24238.39, \n      email: 'ramonaflowers@gmail.com', \n      password: 'password02', \n      creationyear: 2021, \n      creationmonth: '08', \n      creationday: '12' },\n    { id: 3,\n      surname: 'Chau', \n      firstname: 'Knives', \n      account: 21710808100709, \n      balance: 22331.43, \n      email: 'kniveschau@gmail.com', \n      password: 'password03', \n      creationyear: 2013, \n      creationmonth: '11', \n      creationday: '11'  },\n    { id: 4, \n      surname: 'Adams', \n      firstname: 'Envy', \n      account: 96621942980069, \n      balance: 32838.01, \n      email: 'envyadams@gmail.com', \n      password: 'password04', \n      creationyear: 2015, \n      creationmonth: '08', \n      creationday: '08'  \n    },\n    { id: 5, \n      surname: 'Graves', \n      firstname: 'Gideon', \n      account: 34363436714764, \n      balance: 29090.92, \n      email: 'gideongraves@gmail.com', \n      password: 'password05', \n      creationyear: 2016, \n      creationmonth: '02', \n      creationday: '10'  \n    },\n    { id: 6, \n      surname: 'Lee', \n      firstname: 'Lucas', \n      account: 45572087798148, \n      balance: 89296.12, \n      email: 'lucaslee@gmail.com', \n      password: 'password06', \n      creationyear: 2009, \n      creationmonth: '12', \n      creationday: '27'\n    },\n    { id: 7, \n      surname: 'Wells', \n      firstname: 'Wallace', \n      account: 40207543570209, \n      balance: 18125.99, \n      email: 'wallacewells@gmail.com', \n      password: 'password07', \n      creationyear: 2020, \n      creationmonth: '05', \n      creationday: '22'\n    },\n    { id: 8, \n      surname: 'Richter', \n      firstname: 'Roxy', \n      account: 12938104856372, \n      balance: 19232.18, \n      email: 'richterroxy@gmail.com',\n      password: 'password08', \n      creationyear: 2015, \n      creationmonth: '01', \n      creationday: '28'\n    },\n]\n\nexport default UserDirectory;","import React from 'react';\nimport UserDirectory from '../UserDirectory'\nclass NewUserForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          id: '',\n          surname: '',\n          firstname: '',\n          account: '',\n          balance: '',\n          email: '',\n          password: '',\n          creationyear: '',\n          creationmonth: '',\n          creationday: '',\n        };\n    }\n    mySubmitHandler = (event) => {\n      event.preventDefault();\n      UserDirectory.push(this.state)\n      console.log(this.state)\n      console.log(UserDirectory)\n      alert(\"You have created an account for\" + this.state.firstname + ' ' + this.state.surname);\n    }\n    surnameFunction = (event) => {\n        this.setState({surname: event.target.value});\n        const accountNumber = 10000000000000 + Math.floor(Math.random() * 10000000000000);\n        this.setState({account: accountNumber});\n        var today = new Date();\n        this.setState({creationyear: JSON.stringify(today.getFullYear())});\n        this.setState({creationmonth: ('0' + (today.getMonth()+1)).slice(-2)});\n        this.setState({creationday: JSON.stringify(today.getDate())});\n        this.setState({id: UserDirectory.length + 1});\n    }\n    firstnameFunction = (event) => {\n        this.setState({firstname: event.target.value});\n    }\n    emailFunction = (event) => {\n        this.setState({email: event.target.value});\n    }\n    passwordFunction = (event) => {\n        this.setState({password: event.target.value});\n    }\n    balanceFunction = (event) => {\n        this.setState({balance: event.target.value});\n    }\n    render() {\n      return (\n        <form onSubmit={this.mySubmitHandler}>\n        <h1>You are creating an account for {this.state.firstname} {this.state.surname}.</h1>\n        <p>Enter your name, and submit:</p>\n        <label>First Name</label>\n        <input\n          type='text'\n          onChange={this.firstnameFunction}\n        /><br />\n        <label>Surname</label>\n        <input\n          type='text'\n          onChange={this.surnameFunction}\n        /><br />\n        <label>Email</label>\n        <input\n          type='text'\n          onChange={this.emailFunction}\n        /><br />\n        <label>Password</label>\n        <input\n          type='text'\n          onChange={this.passwordFunction}\n        /><br />\n        <label>Balance</label>\n        <input\n          type='text'\n          onChange={this.balanceFunction}\n        /><br />\n        <input\n          type='submit'\n        />\n        </form>\n      );\n    }\n  }\n  \n\n  export default NewUserForm;","import React, { useState } from 'react';\nimport bankapplogo from '../logos/bankapp-logo.png'\nimport PopUpNewUser from './popups/PopUpNewUser.js'\nimport PopUpAdjust from './popups/PopUpNewUser.js'\nimport NewUserForm from './popups/NewUserForm'\n\nfunction Navbar() {\n    const [isOpenUser, setIsOpenUser] = useState(false);\n    const [isOpenAdjust, setIsOpenAdjust] = useState(false);\n \n    const togglePopUpUser = () => {\n    setIsOpenUser(!isOpenUser);\n    }\n\n    const togglePopUpAdjust = () => {\n    setIsOpenAdjust(!isOpenAdjust);\n    }\n\n    return (\n      <nav className=\"nav-bar\">\n        <button className=\"nav-logo\"><img id=\"logo\" alt=\"logo\" src={bankapplogo} /></button>\n        <ul className=\"nav-menu\">\n            <li className=\"nav-item\">\n                {isOpenUser && <PopUpNewUser\n                content={<>\n                    <b>Create a New User</b>\n                    <NewUserForm />\n                </>}\n                handleClose={togglePopUpUser}\n                />}\n                <button onClick={togglePopUpUser} className=\"nav-link\">New User</button>\n            </li>\n            <li className=\"nav-item\">\n                {isOpenAdjust && <PopUpAdjust\n                content={<>\n                    <b>Adjust the Accounts</b>\n                    <p>figure out a function here</p>\n                </>}\n                handleClose={togglePopUpAdjust}\n                />}\n                <button onClick={togglePopUpAdjust} className=\"nav-link\">Adjust Accounts</button>\n            </li>\n            <li className=\"nav-item\">\n                <button className=\"nav-link\">Budget App</button>\n            </li>\n        </ul>\n    </nav>\n    );\n  }\n\n  export default Navbar;\n","import React from 'react';\nimport UserDirectory from './UserDirectory'\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  const requestSortDate = (day,month,year) => {\n    requestSort(day);\n    requestSort(month);\n    requestSort(year);\n  };\n\n  return { items: sortedItems, requestSort, sortConfig, requestSortDate };\n};\n\n\nconst UserListTable = (props) => {\n  const { items, requestSort, sortConfig, requestSortDate } = useSortableData(props.users);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('surname')}\n              className={getClassNamesFor('surname')}\n            >\n              Account Name\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('account')}\n              className={getClassNamesFor('account')}\n            >\n              Acc No.\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('balance')}\n              className={getClassNamesFor('balance')}\n            >\n              Balance\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('email')}\n              className={getClassNamesFor('email')}\n            >\n              Email Add.\n            </button>\n          </th>\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSortDate('creationday','creationmonth','creationyear')}\n              className={getClassNamesFor('creationyear')}\n            >\n            Created\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item) => (\n          <tr key={item.id}>\n            <td width=\"25%\">{item.surname}, {item.firstname}</td>\n            <td width=\"16%\">{item.account}</td>\n            <td width=\"16%\">₱ {item.balance}</td>\n            <td width=\"26%\">{item.email}</td>\n            <td width=\"17%\">{item.creationmonth}/{item.creationday}/{item.creationyear}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default function UserList() {\n  return (\n    <div className=\"UserList\">\n      <UserListTable\n        users={UserDirectory}\n      />\n    </div>\n  );\n}\n","function UnderNav() {\n    return (\n      <div style={{height: \"50px\"}}>\n          .\n      </div>\n    );\n  }\n  export default UnderNav;","function HelloUser() {\n    return (\n    <div className=\"greeting\">\n        welcome to aiBank<br></br>\n        time<br></br>\n        date<br></br>\n        hello, inputusernamehere i'll figure this out tomo!\n    </div>\n    );\n  }\n\n  export default HelloUser;\n","function TransactionHistory() {\n    return (\n    <div className=\"transactionHistory\">\n        another table probably<br></br>\n        kahit di na sortable<br></br>\n        include account number, description, transaction, date of transaction<br></br>\n        process: new user/adjust accounts will be pop up windows,\n        budget app will be separate page (how to make separate page?),<br></br>\n        how to make table scrollable without messing it up LMAO<br></br>\n        make a log in for the bank employee to access this page; separate page???\n    </div>\n    );\n  }\n\n  export default TransactionHistory;","import React from 'react';\nimport './App.css'\nimport Navbar from './components/Navbar'\nimport UserList from './components/UserList'\nimport UnderNav from './components/UnderNav'\nimport HelloUser from './components/HelloUser'\nimport TransactionHistory from './components/TransactionHistory'\n\nfunction App() {\n\n  return (\n    <div className=\"pageBody\">\n    <Navbar />\n    <UnderNav />\n    <div className=\"pageWhole\">\n    <HelloUser />\n    <UserList />\n    <TransactionHistory />\n    </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}